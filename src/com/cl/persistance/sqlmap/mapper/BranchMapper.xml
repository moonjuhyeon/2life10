<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cl.persistance.mapper.BranchMapper">
	
	<select id="getBranchList" resultType="BranchDTO">
		SELECT @ROWNUM := @ROWNUM + 1 	AS ROWNUM,
			   BRANCH_NO				AS BRANCHNO,
		       BRANCH_AREA_CODE 		AS BRANCHAREACODE,
		       BRANCH_NAME 				AS BRANCHNAME,
		       BRANCH_OFFICER_NAME 		AS BRANCHOFFICERNAME,
		       BRANCH_TEL_NO 			AS BRANCHTELNO,
		       BRANCH_POST_NO 			AS BRANCHPOSTNO,
		       BRANCH_ADDRESS 			AS BRANCHADDRESS,
		       BRANCH_ADDRESS_DETAIL 	AS BRANCHADDRESSDETAIL,
		       BRANCH_VIEW_CNT 			AS BRANCHVIEWCNT,
		       REG_MEMBER_NO 			AS REGMEMBERNO,
		       REG_DT 					AS REGDT,
		       CHG_MEMBER_NO 			AS CHGMEMBERNO,
		       CHG_DT 					AS CHGDT
		  FROM BRANCH_INFO, (SELECT @ROWNUM := 0) R
      ORDER BY BRANCH_NO DESC
	</select>
	
	<insert id="insertBranch" parameterType="BranchDTO">
		INSERT INTO BRANCH_INFO
		(
			BRANCH_AREA_CODE, 
			BRANCH_NAME, 
			BRANCH_OFFICER_NAME, 
			BRANCH_TEL_NO, 
			BRANCH_POST_NO, 
			BRANCH_ADDRESS, 
			BRANCH_ADDRESS_DETAIL, 
			BRANCH_VIEW_CNT, 
			REG_MEMBER_NO, 
			REG_DT
		)
		VALUES
		(
			#{branchAreaCode},
			#{branchName},
			#{branchOfficerName},
			#{branchTelNo},
			#{branchPostNo},
			#{branchAddress},
			#{branchAddressDetail},
			0,
			#{regMemberNo},<!-- 여기는 나중에 회원 모듈 끝나면 바꿔주기 -->
			NOW()
		)
	</insert>
	
	<select id="getBranchDetail" parameterType="string" resultType="BranchDTO">
		SELECT @ROWNUM := @ROWNUM + 1 	AS ROWNUM,
			   BRANCH_NO				AS BRANCHNO,
		       BRANCH_AREA_CODE 		AS BRANCHAREACODE,
		       BRANCH_NAME 				AS BRANCHNAME,
		       BRANCH_OFFICER_NAME 		AS BRANCHOFFICERNAME,
		       BRANCH_TEL_NO 			AS BRANCHTELNO,
		       BRANCH_POST_NO 			AS BRANCHPOSTNO,
		       BRANCH_ADDRESS 			AS BRANCHADDRESS,
		       BRANCH_ADDRESS_DETAIL 	AS BRANCHADDRESSDETAIL,
		       BRANCH_VIEW_CNT 			AS BRANCHVIEWCNT,
		       REG_MEMBER_NO 			AS REGMEMBERNO,
		       REG_DT 					AS REGDT,
		       CHG_MEMBER_NO 			AS CHGMEMBERNO,
		       CHG_DT 					AS CHGDT
		  FROM BRANCH_INFO, (SELECT @ROWNUM := 0) R
		 WHERE BRANCH_NO = #{branchNo}
	  ORDER BY BRANCH_NO DESC
	</select>
	
	<delete id="deleteBranch" parameterType="string">
		DELETE FROM BRANCH_INFO WHERE BRANCH_NO = #{branchNo}
	</delete>
	
	<update id="updateBranch">
		UPDATE BRANCH_INFO
		   SET BRANCH_AREA_CODE = #{branchAreaCode},
		       BRANCH_NAME = #{branchName},
		       BRANCH_OFFICER_NAME = #{branchOfficerName},
		       BRANCH_TEL_NO = #{branchTelNo},
		       BRANCH_POST_NO = #{branchPostNo},
		       BRANCH_ADDRESS = #{branchAddress},
		       BRANCH_ADDRESS_DETAIL = #{branchAddressDetail},
		       CHG_MEMBER_NO = '0',
		       CHG_DT = NOW()
		 WHERE BRANCH_NO = #{branchNo}
	</update>
	
	<update id="updateBranchViewCnt" parameterType="string">
		UPDATE BRANCH_INFO
		   SET BRANCH_VIEW_CNT = BRANCH_VIEW_CNT + 1
		 WHERE BRANCH_NO = #{branchNo}
	</update>
	
	<select id="getBranchSearch" parameterType="hashmap" resultType="BranchDTO">
		SELECT @ROWNUM := @ROWNUM + 1 	AS ROWNUM,
			   BRANCH_NO				AS BRANCHNO,
	   		   BRANCH_AREA_CODE 		AS BRANCHAREACODE,
	     	   BRANCH_NAME 				AS BRANCHNAME,
	   		   BRANCH_OFFICER_NAME 		AS BRANCHOFFICERNAME,
	   		   BRANCH_TEL_NO 			AS BRANCHTELNO,
	   		   BRANCH_POST_NO 			AS BRANCHPOSTNO,
	   		   BRANCH_ADDRESS 			AS BRANCHADDRESS,
	   		   BRANCH_ADDRESS_DETAIL 	AS BRANCHADDRESSDETAIL,
	   		   BRANCH_VIEW_CNT 			AS BRANCHVIEWCNT,
	   		   REG_MEMBER_NO 			AS REGMEMBERNO,
	   		   REG_DT 					AS REGDT,
	   		   CHG_MEMBER_NO 			AS CHGMEMBERNO,
	   		   CHG_DT 					AS CHGDT
  		  FROM BRANCH_INFO, (SELECT @ROWNUM := 0) R
   		   WHERE BRANCH_AREA_CODE = #{searchArea} AND INSTR(BRANCH_NAME, #{searchWord}) > 0
   		ORDER BY BRANCHNO DESC
	
	</select>
</mapper>