<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.cl.persistance.mapper.MemberMapper">
	
	<!-- 아이디 중복확인 쿼리 -->
	<select id="getIdCheck" parameterType="MemberDTO" resultType="int">
		SELECT COUNT(*) USER_EXISTS
		  FROM MEMBER_INFO
		 WHERE MEMBER_ID = #{memberId}
	</select>
	
	<!-- 회원가입 쿼리 -->
	<insert id="insertMember" parameterType="MemberDTO">
		INSERT INTO MEMBER_INFO
				(
				 MEMBER_NO,
				 MEMBER_ID, 
				 MEMBER_PASSWORD, 
				 MEMBER_NAME, 
				 MEMBER_SEX, 
				 MEMBER_HOME_NO, 
				 MEMBER_PHONE_NO,
				 MEMBER_POST_NO, 
				 MEMBER_ADDRESS,
				 MEMBER_ADDRESS_DETAIL,
				 MEMBER_EMAIL1,
				 MEMBER_EMAIL2,
				 MEMBER_PRE,
				 MEMBER_AUTH,
				 REG_MEMBER_NO,
				 REG_DT
				)
		VALUES  (
		         <!-- AUTO_INCREMENT 수정 작업 후 쿼리 수정 필요 -->
		         (
		          SELECT (MAX(IFNULL(A.MEMBER_NO, 0)) + 1) MEMBER_NO
		            FROM MEMBER_INFO A
		         ),
				 #{memberId},
				 #{memberPassword},
				 #{memberName},
				 #{memberSex},
				 #{memberHomeNo},
				 #{memberPhoneNo},
				 #{memberPostNo},
				 #{memberAddress},
				 #{memberAddressDetail},
				 #{memberEmail1},
				 #{memberEmail2},
				 #{memberPre},
				 #{memberAuth},	
				 <!-- last_insert_id(), -->
				 (
				  SELECT (MAX(IFNULL(B.MEMBER_NO, 0)) + 1) MEMBER_NO
				    FROM MEMBER_INFO B
				 ),
				 NOW()
				)
	</insert>
	
	<!-- 로그인 쿼리 -->
	<select id="getMemberLogin" parameterType="MemberDTO" resultType="MemberDTO">
		SELECT MEMBER_NO			MEMBERNO,
		       MEMBER_ID 			MEMBERID,
		       MEMBER_NAME			MEMBERNAME, 
		       MEMBER_AUTH 			MEMBERAUTH,
		       MEMBER_PRE			MEMBERPRE
		  FROM MEMBER_INFO
		 WHERE MEMBER_ID = 			#{memberId}
		   AND MEMBER_PASSWORD = 	#{memberPassword}
	</select>
	
	<!-- 회원리스트 쿼리 -->
	<select id="getMemberList" parameterType="MemberDTO" resultType="MemberDTO">
		SELECT M.MEMBER_NO								MEMBERNO,
		       M.MEMBER_ID								MEMBERID,
		       M.MEMBER_NAME							MEMBERNAME,
		       DATE_FORMAT(M.REG_DT, '%Y.%m.%d')		REGDT,
		       P.PAGE
		  FROM MEMBER_INFO M
		 INNER JOIN
		       (
		        SELECT COUNT(*)							PAGE
		          FROM MEMBER_INFO
		         WHERE DEL_YN = 'N'
		       ) P
		 WHERE M.DEL_YN = 'N'
		 ORDER BY MEMBER_NO DESC
		 LIMIT #{page}, #{splitPage}
	</select>
	
	<!-- 회원정보 상세 쿼리 -->
	<select id="getMemberDetail" parameterType="MemberDTO" resultType="MemberDTO">
		SELECT MEMBER_NO					MEMBERNO,
		       MEMBER_ID					MEMBERID,
		       MEMBER_NAME					MEMBERNAME,
			   IF(
			      MEMBER_SEX = 'M',
			      '남자',
			      IF(
			         MEMBER_SEX = 'F',
			         '여자', ' '
			        )
			     )							MEMBERSEX,
		       MEMBER_HOME_NO				MEMBERHOMENO,
		       MEMBER_PHONE_NO				MEMBERPHONENO,
		       MEMBER_POST_NO				MEMBERPOSTNO,
		       MEMBER_ADDRESS				MEMBERADDRESS,
		       MEMBER_ADDRESS_DETAIL		MEMBERADDRESSDETAIL,
		       MEMBER_EMAIL1				MEMBEREMAIL1,
		       MEMBER_EMAIL2				MEMBEREMAIL2
		  FROM MEMBER_INFO
		 WHERE MEMBER_NO = #{memberNo}
	</select>
	
	<!-- 회원정보 수정 쿼리(관리자) -->
	<update id="updateMember" parameterType="MemberDTO">
	<choose>
		<when test="memberPassword != null">
		UPDATE MEMBER_INFO
		   SET  MEMBER_NAME = #{memberName}
		   	   ,MEMBER_PASSWORD = #{memberPassword}
		       ,MEMBER_SEX = #{memberSex}
		       ,MEMBER_HOME_NO = #{memberHomeNo}
		       ,MEMBER_PHONE_NO = #{memberPhoneNo}
		       ,MEMBER_POST_NO = #{memberPostNo}
		       ,MEMBER_ADDRESS = #{memberAddress}
		       ,MEMBER_ADDRESS_DETAIL = #{memberAddressDetail}
		       ,MEMBER_EMAIL1 = #{memberEmail1}
		       ,MEMBER_EMAIL2 = #{memberEmail2}
		       ,CHG_MEMBER_NO = #{chgMemberNo}
		       ,CHG_DT = NOW()
		 WHERE MEMBER_NO = #{memberNo}
		
		</when>
		<otherwise>
		UPDATE MEMBER_INFO
		   SET  MEMBER_NAME = #{memberName}
		       ,MEMBER_SEX = #{memberSex}
		       ,MEMBER_HOME_NO = #{memberHomeNo}
		       ,MEMBER_PHONE_NO = #{memberPhoneNo}
		       ,MEMBER_POST_NO = #{memberPostNo}
		       ,MEMBER_ADDRESS = #{memberAddress}
		       ,MEMBER_ADDRESS_DETAIL = #{memberAddressDetail}
		       ,MEMBER_EMAIL1 = #{memberEmail1}
		       ,MEMBER_EMAIL2 = #{memberEmail2}
		       ,CHG_MEMBER_NO = #{chgMemberNo}
		       ,CHG_DT = NOW()
		 WHERE MEMBER_NO = #{memberNo}
		
		</otherwise>
	</choose>
	</update>
	
	<!-- 회원 삭제 쿼리(관리자) -->
	<update id="deleteMember" parameterType="String">
		UPDATE MEMBER_INFO
		   SET  MEMBER_ID = ' '
		       ,MEMBER_PASSWORD = ' '
		       ,MEMBER_PRE = ' '
		       ,MEMBER_EMAIL1 = ' '
		       ,MEMBER_EMAIL2 = ' '
		       ,MEMBER_SEX = ' '
		       ,MEMBER_HOME_NO = ' '
		       ,MEMBER_PHONE_NO = ' '
		       ,MEMBER_POST_NO = ' '
		       ,MEMBER_ADDRESS = ' '
		       ,MEMBER_ADDRESS_DETAIL = ' '
		       ,CHG_MEMBER_NO = #{chgMemberNo}
		       ,CHG_DT = NOW()
		       ,DEL_YN = 'Y'
		       ,DEL_DVCD =
		       (
		        SELECT C.CODE_ID
		          FROM CODE C
		         WHERE C.CODE_NAME = '관리자삭제'
		       )
		 WHERE MEMBER_NO = #{memberNo}
	</update>
	<select id="getMemberId" parameterType="MemberDTO" resultType="MemberDTO">
		SELECT
			MEMBER_ID AS MEMBERID
		FROM 
			MEMBER_INFO
		WHERE
			MEMBER_NAME = #{memberName} AND
			MEMBER_EMAIL1 = #{memberEmail1} AND
			MEMBER_EMAIL2 = #{memberEmail2}
	</select>
	
	<update id="updateTmpPass" parameterType="MemberDTO">
		UPDATE
			MEMBER_INFO
		SET
			MEMBER_PASSWORD = #{memberPassword},
			CHG_DT = NOW()
		WHERE
			MEMBER_ID = #{memberId} AND
			MEMBER_NAME = #{memberName} AND
			MEMBER_EMAIL1 = #{memberEmail1} AND
			MEMBER_EMAIL2 = #{memberEmail2}
	</update>
	
	<update id="updateMemberPassword" parameterType="MemberDTO">
		UPDATE
			MEMBER_INFO
		SET
			MEMBER_PASSWORD = #{newPassword},
			CHG_MEMBER_NO = #{memberNo},
			CHG_DT = NOW()
		WHERE
			MEMBER_NO = #{memberNo} AND
			MEMBER_PASSWORD = #{memberPassword}
	</update>
	
	<select id="getnSignMemberList" resultType="MemberDTO">
		SELECT M.MEMBER_NO								MEMBERNO,
		       M.MEMBER_ID								MEMBERID,
		       M.MEMBER_NAME							MEMBERNAME,
		       DATE_FORMAT(M.REG_DT, '%Y.%m.%d')		REGDT,
		       P.PAGE
		 FROM MEMBER_INFO M
		 INNER JOIN
		       (
		        SELECT COUNT(*)							PAGE
		          FROM MEMBER_INFO
		         WHERE DEL_YN = 'N' AND MEMBER_PRE = 'N'
		       ) P
		 WHERE M.DEL_YN = 'N' AND M.MEMBER_PRE = 'N'
		 ORDER BY MEMBER_NO DESC
		 LIMIT #{page}, #{splitPage}
	</select>
</mapper>